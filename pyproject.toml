[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cloudkv"
version = "0.2.0"
description = "Hosted key/value store based on Cloudflare workers and KV store."
authors = [{ name = "Samuel Colvin", email = "s@muelcolvin.com" }]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
]

requires-python = ">=3.9"
dependencies = [
    "eval-type-backport>=0.2.2",
    "httpx>=0.28.1",
    "pydantic>=2.11.5",
]

[project.scripts]
cloudkv = "cloudkv.__main__:cli"

[dependency-groups]
dev = [
    "coverage[toml]>=7.8.2",
    "devtools>=0.12.2",
    "ruff>=0.11.11",
    "pytest>=8.4.0",
    "pytest-pretty>=1.3.0",
    "pyright>=1.1.398",
    "inline-snapshot[black]>=0.23.2",
    "dirty-equals>=0.9.0",
    "anyio>=4.9.0",
]

[tool.pytest.ini_options]
testpaths = "tests"
xfail_strict = true

[tool.coverage.run]
# required to avoid warnings about files created by create_module fixture
include = [
    "pydantic_ai_slim/**/*.py",
    "pydantic_evals/**/*.py",
    "pydantic_graph/**/*.py",
    # TODO(Marcelo): Add 100% coverage for A2A.
    # "fasta2a/**/*.py",
    "tests/**/*.py",
]
omit = ["tests/test_live.py", "tests/example_modules/*.py"]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
ignore_errors = true
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    'if typing.TYPE_CHECKING:',
    '@overload',
    '@deprecated',
    '@typing.overload',
    '@abstractmethod',
    '\(Protocol\):$',
    'typing.assert_never',
    '$\s*assert_never\(',
    'if __name__ == .__main__.:',
    '$\s*pass$',
]


[tool.ruff]
line-length = 120
target-version = "py39"
include = ["cloudkv/**/*.py"]

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "UP", "I"]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { combine-as-imports = true }
mccabe = { max-complexity = 15 }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# don't format python in docstrings, pytest-examples takes care of it
docstring-code-format = false
quote-style = "single"

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = true
include = ["cloudkv", "tests"]
venv = ".venv"

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = 'cf-worker/worker-configuration.d.ts,cf-worker/package-lock.json'
