name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request: {}

env:
  COLUMNS: 150
  UV_PYTHON: 3.12
  UV_FROZEN: "1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv sync

      - uses: actions/setup-node@v4

      - run: npm i
        working-directory: cf-worker

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files --verbose
        env:
          SKIP: no-commit-to-branch

  test-python:
    name: test py${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    env:
      UV_PYTHON: ${{ matrix.python-version }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv sync
      - run: uv run pytest

  test-cf-worker:
    name: test cf worker

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - run: npm i
        working-directory: cf-worker

      - run: npm run test
        working-directory: cf-worker

  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [lint, test-python, test-cf-worker]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  deploy-worker:
    needs: [check]
    if: "success() && github.ref == 'refs/heads/main'"
    runs-on: ubuntu-latest
    environment: cloudflare-workers-deploy

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - run: npm i
        working-directory: cf-worker

      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.cloudflare_api_token }}
          command: deploy  --var GITHUB_SHA:${{ github.sha }}
          workingDirectory: cf-worker

  release:
    needs: [check]
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    environment:
      name: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: check GITHUB_REF matches package version
        uses: samuelcolvin/check-python-version@v4.1
        with:
          version_file_path: pyproject.toml

      - run: uv build

      - run: uv publish --trusted-publishing always
